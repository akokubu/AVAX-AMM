/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { AMM, AMMInterface } from "../../../contracts/AMM.sol/AMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getEquivalentToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "getWithdrawEstimate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountX",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountY",
        type: "uint256",
      },
    ],
    name: "provide",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c4c38038062001c4c83398181016040528101906200003791906200013e565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000185565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b60006200010682620000e5565b9050919050565b6200011881620000f9565b81146200012457600080fd5b50565b60008151905062000138816200010d565b92915050565b60008060408385031215620001585762000157620000c0565b5b6000620001688582860162000127565b92505060206200017b8582860162000127565b9150509250929050565b611ab780620001956000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806387b292f91161005b57806387b292f91461013c578063a37230ae1461016c578063aaf5eb681461019c578063d72b9da2146101ba57610088565b8063026c42071461008d5780631877bb5c146100ab5780632e1a7d4d146100db5780633279081a1461010c575b600080fd5b6100956101ea565b6040516100a291906111e6565b60405180910390f35b6100c560048036038101906100c09190611264565b6101f0565b6040516100d291906111e6565b60405180910390f35b6100f560048036038101906100f091906112bd565b610208565b6040516101039291906112ea565b60405180910390f35b61012660048036038101906101219190611351565b61061e565b60405161013391906111e6565b60405180910390f35b610156600480360381019061015191906113b8565b610c72565b60405161016391906111e6565b60405180910390f35b610186600480360381019061018191906113b8565b610e45565b60405161019391906111e6565b60405180910390f35b6101a461101e565b6040516101b191906111e6565b60405180910390f35b6101d460048036038101906101cf91906113f8565b611025565b6040516101e191906111e6565b60405180910390f35b60025481565b60036020528060005260406000206000915090505481565b600080600060025411610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790611482565b60405180910390fd5b60008311610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a906114ee565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c9061155a565b60405180910390fd5b600061034160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610c72565b90506000610371600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610c72565b905084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c291906115a9565b9250508190555084600260008282546103db91906115a9565b9250508190555081600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045291906115a9565b925050819055508060046000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ca91906115a9565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161052c9291906115ec565b6020604051808303816000875af115801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f919061164d565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105cd9291906115ec565b6020604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610610919061164d565b508181935093505050915091565b60008483600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806106c9575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906116c6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107af5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e5906116c6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390611732565b60405180910390fd5b6000861161089f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108969061179e565b60405180910390fd5b600084116108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d99061179e565b60405180910390fd5b6000806002540361090457620f424060646108fd91906117be565b9050610a04565b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548860025461095491906117be565b61095e919061182f565b90506000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054876002546109b091906117be565b6109ba919061182f565b90508082146109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f5906118d2565b60405180910390fd5b81925050505b60008111610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90611964565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610a8493929190611984565b6020604051808303816000875af1158015610aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac7919061164d565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610b0593929190611984565b6020604051808303816000875af1158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b48919061164d565b5086600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9891906119bb565b9250508190555084600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bee91906119bb565b925050819055508060026000828254610c0791906119bb565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c5d91906119bb565b92505081905550809350505050949350505050565b60008060025411610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf90611482565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d605750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d96906116c6565b60405180910390fd5b600254831115610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90611a61565b60405180910390fd5b600254600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610e3291906117be565b610e3c919061182f565b91505092915050565b60008060025411610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8290611482565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610f335750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f69906116c6565b60405180910390fd5b6000610f7d8561103d565b9050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100a91906117be565b611014919061182f565b9250505092915050565b620f424081565b60046020528060005260406000206000915090505481565b60008160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806110e75750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111d906116c6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111a357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506111c7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b50919050565b6000819050919050565b6111e0816111cd565b82525050565b60006020820190506111fb60008301846111d7565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061123182611206565b9050919050565b61124181611226565b811461124c57600080fd5b50565b60008135905061125e81611238565b92915050565b60006020828403121561127a57611279611201565b5b60006112888482850161124f565b91505092915050565b61129a816111cd565b81146112a557600080fd5b50565b6000813590506112b781611291565b92915050565b6000602082840312156112d3576112d2611201565b5b60006112e1848285016112a8565b91505092915050565b60006040820190506112ff60008301856111d7565b61130c60208301846111d7565b9392505050565b600061131e82611226565b9050919050565b61132e81611313565b811461133957600080fd5b50565b60008135905061134b81611325565b92915050565b6000806000806080858703121561136b5761136a611201565b5b60006113798782880161133c565b945050602061138a878288016112a8565b935050604061139b8782880161133c565b92505060606113ac878288016112a8565b91505092959194509250565b600080604083850312156113cf576113ce611201565b5b60006113dd8582860161133c565b92505060206113ee858286016112a8565b9150509250929050565b60006020828403121561140e5761140d611201565b5b600061141c8482850161133c565b91505092915050565b600082825260208201905092915050565b7f5a65726f206c6971756964697479000000000000000000000000000000000000600082015250565b600061146c600e83611425565b915061147782611436565b602082019050919050565b6000602082019050818103600083015261149b8161145f565b9050919050565b7f73686172652063616e6e6f74206265207a65726f210000000000000000000000600082015250565b60006114d8601583611425565b91506114e3826114a2565b602082019050919050565b60006020820190508181036000830152611507816114cb565b9050919050565b7f496e73756666696369656e742073686172650000000000000000000000000000600082015250565b6000611544601283611425565b915061154f8261150e565b602082019050919050565b6000602082019050818103600083015261157381611537565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b4826111cd565b91506115bf836111cd565b92508282039050818111156115d7576115d661157a565b5b92915050565b6115e681611226565b82525050565b600060408201905061160160008301856115dd565b61160e60208301846111d7565b9392505050565b60008115159050919050565b61162a81611615565b811461163557600080fd5b50565b60008151905061164781611621565b92915050565b60006020828403121561166357611662611201565b5b600061167184828501611638565b91505092915050565b7f546f6b656e206973206e6f7420696e2074686520706f6f6c0000000000000000600082015250565b60006116b0601883611425565b91506116bb8261167a565b602082019050919050565b600060208201905081810360008301526116df816116a3565b9050919050565b7f546f6b656e732073686f756c6420626520646966666572656e74210000000000600082015250565b600061171c601b83611425565b9150611727826116e6565b602082019050919050565b6000602082019050818103600083015261174b8161170f565b9050919050565b7f416d6f756e742063616e6e6f74206265207a65726f2100000000000000000000600082015250565b6000611788601683611425565b915061179382611752565b602082019050919050565b600060208201905081810360008301526117b78161177b565b9050919050565b60006117c9826111cd565b91506117d4836111cd565b92508282026117e2816111cd565b915082820484148315176117f9576117f861157a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061183a826111cd565b9150611845836111cd565b92508261185557611854611800565b5b828204905092915050565b7f4571756976616c656e742076616c7565206f6620746f6b656e73206e6f74207060008201527f726f76696465642e2e2e00000000000000000000000000000000000000000000602082015250565b60006118bc602a83611425565b91506118c782611860565b604082019050919050565b600060208201905081810360008301526118eb816118af565b9050919050565b7f41737365742076616c7565206c657373207468616e207468726573686f6c642060008201527f666f7220636f6e747269627574696f6e21000000000000000000000000000000602082015250565b600061194e603183611425565b9150611959826118f2565b604082019050919050565b6000602082019050818103600083015261197d81611941565b9050919050565b600060608201905061199960008301866115dd565b6119a660208301856115dd565b6119b360408301846111d7565b949350505050565b60006119c6826111cd565b91506119d1836111cd565b92508282019050808211156119e9576119e861157a565b5b92915050565b7f53686172652073686f756c64206265206c657373207468616e20746f74616c5360008201527f6861726500000000000000000000000000000000000000000000000000000000602082015250565b6000611a4b602483611425565b9150611a56826119ef565b604082019050919050565b60006020820190508181036000830152611a7a81611a3e565b905091905056fea26469706673582212201c3cf2a6cb29fd8b29e5eea1f1496aeac68628b763835f70503b87d7f90d575164736f6c63430008110033";

type AMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMM__factory extends ContractFactory {
  constructor(...args: AMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AMM> {
    return super.deploy(_tokenX, _tokenY, overrides || {}) as Promise<AMM>;
  }
  override getDeployTransaction(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenX, _tokenY, overrides || {});
  }
  override attach(address: string): AMM {
    return super.attach(address) as AMM;
  }
  override connect(signer: Signer): AMM__factory {
    return super.connect(signer) as AMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMInterface {
    return new utils.Interface(_abi) as AMMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AMM {
    return new Contract(address, _abi, signerOrProvider) as AMM;
  }
}
